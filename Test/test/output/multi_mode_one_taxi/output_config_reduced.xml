<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<config>
	<module name="controler" >
		<!-- Default=1000;  -->
		<param name="lastIteration" value="0" />
		<param name="outputDirectory" value="test/output/multi_mode_one_taxi" />
		<!-- Possible values: failIfDirectoryExists, overwriteExistingFiles, deleteDirectoryIfExists -->
		<param name="overwriteFiles" value="deleteDirectoryIfExists" />
	</module>
	<module name="dvrp" >
		<!-- Mode of which the network will be used for throwing events and hence calculating travel times. Default is car. -->
		<param name="mobsimMode" value="car" />
		<!-- Mode of which the network will be used for routing vehicles. Default is car, i.e. the car network is used. 'null' means no network filtering - the scenario.network is used -->
		<param name="networkMode" value="car" />
		<!-- Used for OFFLINE estimation of travel times for VrpOptimizer by means of the exponential moving average. The weighting decrease, alpha, must be in (0,1]. We suggest small values of alpha, e.g. 0.05. The averaging starts from the initial travel time estimates. If not provided, the free-speed TTs is used as the initial estimates -->
		<param name="travelTimeEstimationAlpha" value="0.05" />
		<!-- Used for ONLINE estimation of travel times for VrpOptimizer by combining WithinDayTravelTime and DvrpOfflineTravelTimeEstimator. The beta coefficient is provided in seconds and should be either 0 (no online estimation) or positive (mixed online-offline estimation). For 'beta = 0', only the offline estimate is used: 'onlineTT(t) = offlineTT(t)', where 'offlineTT(t)' in the offline estimate for TT at time 't', For 'beta > 0', estimating future TTs at time 't', uses the currently observed TT to correct the offline estimates is made: where 'currentTT' is the currently observed TT, and 'correction = min(1, max(0, 1 - (time - currentTime) / beta))' The rule is that correction decreases linearly from 1 (when 'time = currentTime') to 0 (when 'time = currentTime + beta' For 'time > currentTime + beta' correction is 0, whereas if 'time < currentTime' it is 1. If beta is sufficiently large, 'beta >> 0', only the currently observed TT is used. -->
		<param name="travelTimeEstimationBeta" value="0.0" />
	</module>
	<module name="multiModeTaxi" >
		<parameterset type="taxi" >
			<!-- If true, the startLink is changed to last link in the current schedule, so the taxi starts the next day at the link where it stopped operating the day before. False by default. -->
			<param name="changeStartLinkToLastLinkInSchedule" value="true" />
			<!-- If true, detailed hourly taxi stats are dumped after each iteration. False by default. -->
			<param name="detailedStats" value="true" />
			<!-- Dropoff duration. Must be positive. -->
			<param name="dropoffDuration" value="60.0" />
			<!-- Mode which will be handled by PassengerEngine and VrpOptimizer (passengers'/customers' perspective) -->
			<param name="mode" value="taxi_A" />
			<!-- Pickup duration. Must be positive. -->
			<param name="pickupDuration" value="120.0" />
			<!-- An XML file specifying the taxi fleet. The file format according to dvrp_vehicles_v1.dtd -->
			<param name="taxisFile" value="one_taxi_vehicles_A.xml" />
			<!-- If true, writes time profiles of vehicle statuses (i.e. current task type) and the number of unplanned requests are written to a text file (taxi_status_time_profiles) and saved as plots. False by default. -->
			<param name="timeProfiles" value="true" />
			<parameterset type="optimizer" >
				<param name="cellSize" value="1000" />
				<param name="goal" value="DEMAND_SUPPLY_EQUIL" />
				<param name="id" value="example" />
				<param name="nearestRequestsLimit" value="99999" />
				<param name="nearestVehiclesLimit" value="99999" />
				<param name="type" value="RULE_BASED" />
			</parameterset>
		</parameterset>
		<parameterset type="taxi" >
			<param name="changeStartLinkToLastLinkInSchedule" value="true" />
			<param name="detailedStats" value="true" />
			<param name="dropoffDuration" value="60.0" />
			<param name="mode" value="taxi_B" />
			<param name="pickupDuration" value="120.0" />
			<param name="taxisFile" value="one_taxi_vehicles_B.xml" />
			<param name="timeProfiles" value="true" />
			<parameterset type="optimizer" >
				<param name="cellSize" value="1000" />
				<param name="goal" value="DEMAND_SUPPLY_EQUIL" />
				<param name="id" value="example" />
				<param name="nearestRequestsLimit" value="99999" />
				<param name="nearestVehiclesLimit" value="99999" />
				<param name="type" value="RULE_BASED" />
			</parameterset>
		</parameterset>
		<parameterset type="taxi" >
			<param name="changeStartLinkToLastLinkInSchedule" value="true" />
			<param name="detailedStats" value="true" />
			<param name="dropoffDuration" value="60.0" />
			<param name="mode" value="taxi_C" />
			<param name="pickupDuration" value="120.0" />
			<param name="taxisFile" value="one_taxi_vehicles_C.xml" />
			<param name="timeProfiles" value="true" />
			<parameterset type="optimizer" >
				<param name="cellSize" value="1000" />
				<param name="goal" value="DEMAND_SUPPLY_EQUIL" />
				<param name="id" value="example" />
				<param name="nearestRequestsLimit" value="99999" />
				<param name="nearestVehiclesLimit" value="99999" />
				<param name="type" value="RULE_BASED" />
			</parameterset>
		</parameterset>
	</module>
	<module name="network" >
		<param name="inputNetworkFile" value="grid_network.xml" />
	</module>
	<module name="otfvis" >
		<!-- The (initial) size of the agents.  Only a range of numbers is allowed, otherwise otfvis aborts rather ungracefully, or displays no agents at all. -->
		<param name="agentSize" value="120.0" />
		<!-- coloring scheme for otfvis.  Currently (2012) allowed values: standard bvg bvg2 byId gtfs taxicab -->
		<param name="coloringScheme" value="taxicab" />
		<!-- If non-moving items (e.g. agents at activities, at bus stops, etc.) should be showed.  May affect all non-moving items. -->
		<param name="drawNonMovingItems" value="true" />
		<param name="drawTransitFacilities" value="true" />
		<param name="drawTransitFacilityIds" value="true" />
		<param name="leftMouseFunc" value="Zoom" />
		<!-- The (initial) width of the links of the network. Use positive floating point values. -->
		<param name="linkWidth" value="30.0" />
		<!-- Link width is proportional to `numberOfLanes' or to `capacity'. -->
		<param name="linkwidthIsProportionalTo" value="numberOfLanes" />
		<!-- URL to get WMS tiles from. For a local GeoServer instance, use http://localhost:8080/geoserver/wms?service=WMS& -->
		<param name="mapBaseURL" value="" />
		<!-- The WMS layer to display. For GeoServer and a layer called clipped in workspace mz, use mz:clipped -->
		<param name="mapLayer" value="" />
		<!-- Render everything on top of map tiles. Default: From tiles.openstreetmap.org -->
		<param name="mapOverlayMode" value="false" />
		<param name="middleMouseFunc" value="Pan" />
		<param name="rightMouseFunc" value="Select" />
		<param name="showTeleportation" value="false" />
	</module>
	<module name="planCalcScore" >
		<parameterset type="scoringParameters" >
			<parameterset type="activityParams" >
				<param name="activityType" value="car interaction" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="pt interaction" />
				<param name="typicalDuration" value="undefined" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="bike interaction" />
				<param name="typicalDuration" value="undefined" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="other interaction" />
				<param name="typicalDuration" value="undefined" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="walk interaction" />
				<param name="typicalDuration" value="undefined" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="dummy" />
				<param name="typicalDuration" value="24:00:00" />
			</parameterset>
			<parameterset type="modeParams" >
				<param name="mode" value="car" />
			</parameterset>
			<parameterset type="modeParams" >
				<param name="mode" value="pt" />
			</parameterset>
			<parameterset type="modeParams" >
				<param name="mode" value="walk" />
			</parameterset>
			<parameterset type="modeParams" >
				<param name="mode" value="bike" />
			</parameterset>
			<parameterset type="modeParams" >
				<param name="mode" value="ride" />
			</parameterset>
			<parameterset type="modeParams" >
				<param name="mode" value="other" />
			</parameterset>
			<parameterset type="modeParams" >
				<param name="mode" value="taxi_A" />
			</parameterset>
			<parameterset type="modeParams" >
				<param name="mode" value="taxi_B" />
			</parameterset>
			<parameterset type="modeParams" >
				<param name="mode" value="taxi_C" />
			</parameterset>
		</parameterset>
	</module>
	<module name="plans" >
		<param name="inputPlansFile" value="multi_mode_one_taxi_population.xml" />
	</module>
	<module name="planscalcroute" >
		<parameterset type="teleportedModeParameters" >
			<param name="mode" value="bike" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="mode" value="walk" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="mode" value="access_walk" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="mode" value="egress_walk" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="mode" value="undefined" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="mode" value="ride" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="mode" value="pt" />
		</parameterset>
	</module>
	<module name="qsim" >
		<!-- Options: maxOfStarttimeAndEarliestActivityEnd onlyUseStarttime  -->
		<param name="simStarttimeInterpretation" value="onlyUseStarttime" />
		<!-- snapshotStyle. One of: equiDist queue withHoles withHolesAndShowHoles kinematicWaves  -->
		<param name="snapshotStyle" value="queue" />
	</module>
	<module name="strategy" >
		<!-- maximum number of plans per agent.  ``0'' means ``infinity''.  Currently (2010), ``5'' is a good number -->
		<param name="maxAgentPlanMemorySize" value="1" />
		<parameterset type="strategysettings" >
			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRouteTimeAllocationMutatorTimeAllocationMutator_ReRouteChangeSingleTripModeChangeTripModeSubtourModeChoice (innovative strategies). -->
			<param name="strategyName" value="KeepLastSelected" />
			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="1.0" />
		</parameterset>
	</module>

</config>
